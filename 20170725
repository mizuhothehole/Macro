
Some transfer methods in VBA

1. these methods will consider the parameter type

' these methods in this sub consider the type of parameter
Sub RefSub()
    Debug.Print Chr(1)
    Debug.Print Asc("A")
    On Error Resume Next ' this will let the sub go on running until the end of the sub
    ' on error resume next works between the on error resume next and the end of the sub
    Debug.Print Asc(A) ' this will be a error
    Debug.Print Str(2.22)
    Debug.Print Val("222")
    Debug.Print Int(5.6) ' this will return the value that is smaller than this
    Debug.Print Fix(3.333) ' this will just remove the part after decimal
    Debug.Print Round(8.44, 1)
End Sub

2. these methods will not consider the parameter type

' these methods in this sub only read the string
Sub OriginalSub()
    Debug.Print CInt(5.6) ' original lib
    Debug.Print CInt("5.6") ' original lib
    Debug.Print CInt("5.6") ' original lib
    Debug.Print CBool(22) ' original lib
    Debug.Print CByte(22) ' this will return a byte which is between 0-255 ' original lib
    Debug.Print CDate(#2/4/2017#) ' original lib
    Debug.Print CCur(22.22) ' original lib
    Debug.Print CStr(555) ' original lib
    Debug.Print CVar("5") + "c" ' original lib
    Debug.Print CSng("12.1231111111111") ' original lib
    Debug.Print CSng(12.1231111111111) ' this will transfer the data to single
    Debug.Print CDbl("12.1231111111111") ' original lib
    Debug.Print CDbl(12.1231111111111) ' this will transfer the data to double
    Debug.Print "value" & CBool(0) ' original lib
    Debug.Print "String" & CBool("0") ' original lib
End Sub

3.Three different kinds value of variant: empty, null and error

empty: the variant is announced but not defined with value
null:  the variant is having no value
error: the variant is having the error type of value

Sub varVal()
    Dim varVal
    varVal = "22"
    Debug.Print varVal
    varVal = 22
    Debug.Print varVal
    varVal = Empty
    Debug.Print varVal
    varVal = Null
    Debug.Print varVal
    varVal = Error(1)
    Debug.Print varVal
End Sub

4. VBA Errors

Sub ShowErrorVal()
    Dim varVal
    For i = 0 To 200
        varVal = Error(i)
        Debug.Print varVal
    Next
End Sub

Result:

Application-defined or object-defined error
Return without GoSub
Application-defined or object-defined error
Invalid procedure call or argument
Overflow
Out of memory
Application-defined or object-defined error
Subscript out of range
This array is fixed or temporarily locked
Division by zero
Application-defined or object-defined error
Type mismatch
Out of string space
Application-defined or object-defined error
Expression too complex
Can't perform requested operation
User interrupt occurred
Application-defined or object-defined error
Resume without error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Out of stack space
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Sub or Function not defined
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Too many DLL application clients
Error in loading DLL
Bad DLL calling convention
Application-defined or object-defined error
Internal error
Bad file name or number
File not found
Bad file mode
File already open
Application-defined or object-defined error
Device I/O error
File already exists
Bad record length
Application-defined or object-defined error
Disk full
Input past end of file
Bad record number
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Too many files
Device unavailable
Application-defined or object-defined error
Permission denied
Disk not ready
Application-defined or object-defined error
Application-defined or object-defined error
Can't rename with different drive
Path/File access error
Path not found
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Application-defined or object-defined error
Object variable or With block variable not set
For loop not initialized
Invalid pattern string
Invalid use of Null
Application-defined or object-defined error
Unable to sink events of object because the object is already firing events to the maximum number of event receivers that it supports
Can not call friend function on object which is not an instance of defining class
A property or method call cannot include a reference to a private object, either as an argument or as a return value

5.the difference between the "+" mark and the "&" mark

Sub DiffetentBetweenPlusAndAnd()
Dim a
Dim b
a = "1"
b = 2
c = "2"
Debug.Print a + b ' this returns 3
Debug.Print a & b ' this returns 12
Debug.Print a + c ' this returns 12
Debug.Print a & c ' this returns 12
End Sub
